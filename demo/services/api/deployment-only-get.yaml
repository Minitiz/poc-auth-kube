apiVersion: v1
kind: Namespace
metadata:
  name: api2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: api-serviceaccount
  namespace: api2
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: api-role
  namespace: api2
rules:
- apiGroups:
  - "storage-hub"
  resources:
  - database
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rolebinding-for-api-serviceaccount
  namespace: api2
  labels:
    usedby: storage-hub
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: api-role
subjects:
- kind: ServiceAccount
  name: api-serviceaccount
  namespace: api2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: api2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api2
  template:
    metadata:
      labels:
        app: api2
    spec:
      serviceAccount: api-serviceaccount
      containers:
      - name: app
        image: api-test:local
        imagePullPolicy: Never
        env:
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: LISTEN_ADDR
          value: ":8080"
        - name: STORAGE_HUB_SVC
          value: "http://app.storage-hub.svc.cluster.local"
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: api2
spec:
  type: NodePort
  selector:
    app: api2
  ports:
    - port: 8080
      targetPort: 8080
